name: Performance Tests - TeaStore

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - main

jobs:
  jmeter-tests:
    name: JMeter - Carga Simples e Complexa
    runs-on: ubuntu-latest

    steps:
      - name: Remover arquivo .gitmodules (Correção Forçada)
        run: |
          if [ -f ".gitmodules" ]; then
            echo "Arquivo .gitmodules encontrado. Removendo para evitar erro de checkout."
            rm .gitmodules
          fi

      - name: Checkout repository (sem submodules)
        uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 1

      - name: Instalar Java e JMeter
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-11-jre-headless
          wget https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-5.6.2.tgz
          tar -xzf apache-jmeter-5.6.2.tgz
          export PATH=$PATH:$(pwd)/apache-jmeter-5.6.2/bin

      - name: Teste de Carga Simples (JMeter)
        run: |
          echo "Executando teste de carga simples..."
          ./apache-jmeter-5.6.2/bin/jmeter -n -t jmeter-teastore/teste-carga-simples.jmx -l jmeter-teastore/results-simples.jtl -e -o jmeter-teastore/report-simples

      - name: Teste de Carga Complexo (JMeter)
        run: |
          echo "Executando teste de carga complexo..."
          ./apache-jmeter-5.6.2/bin/jmeter -n -t jmeter-teastore/cenarios-complexos.jmx -l jmeter-teastore/results-complexos.jtl -e -o jmeter-teastore/report-complexos

      - name: Upload Relatórios JMeter
        uses: actions/upload-artifact@v4
        with:
          name: relatorios-jmeter
          path: |
            jmeter-teastore/report-simples
            jmeter-teastore/report-complexos

  k6-tests:
    name: K6 - Carga Simples e Complexa
    runs-on: ubuntu-latest

    steps:
      - name: Remover arquivo .gitmodules (Correção Forçada)
        run: |
          if [ -f ".gitmodules" ]; then
            echo "Arquivo .gitmodules encontrado. Removendo para evitar erro de checkout."
            rm .gitmodules
          fi

      - name: Checkout repository (sem submodules)
        uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 1

      - name: Configurar Node.js (Pré-requisito para NPM)
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Instalar K6 via Snap (Recomendado)
        run: |
          echo "Instalando k6 via Snap para contornar problemas de APT/GPG."
          sudo apt-get update
          sudo apt-get install -y snapd
          sudo snap install k6

      - name: Teste de Carga Simples (K6)
        run: |
          echo "Executando teste simples no K6..."
          k6 run k6-teastore/teste-carga-simples.js

      - name: Teste de Carga Complexo (K6)
        run: |
          echo "Executando teste complexo no K6..."
          k6 run k6-teastore/cenarios-complexos.js

  locust-tests:
    name: Locust - Carga Simples e Complexa
    runs-on: ubuntu-latest

    steps:
      - name: Remover arquivo .gitmodules (Correção Forçada)
        run: |
          if [ -f ".gitmodules" ]; then
            echo "Arquivo .gitmodules encontrado. Removendo para evitar erro de checkout."
            rm .gitmodules
          fi

      - name: Checkout repository (sem submodules)
        uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 1

      - name: Build imagem Docker do TeaStore
        run: |
          docker build -t teastore-webui:latest -f ./locust-teastore/Dockerfile ./locust-teastore

      - name: Iniciar TeaStore (Docker local)
        run: |
          docker run -d -p 8080:8080 --name teastore-webui teastore-webui:latest

      - name: Esperar porta 8080 responder
        run: |
          for i in {1..40}; do
            nc -z localhost 8080 && echo "Porta 8080 respondendo" && exit 0
            echo "Aguardando porta 8080..."
            sleep 2
          done
          echo "Porta 8080 não respondeu a tempo!" && exit 1

      - name: Listar containers em execução
        run: docker ps -a

      - name: Logs do backend
        run: docker logs teastore-webui || true

      - name: Verificar endpoint do backend
        run: curl -v http://localhost:8080/tools.descartes.teastore.webui/ || true

      - name: Teste de Carga Simples (Locust via Docker)
        run: |
          docker run --rm -v ${{ github.workspace }}/locust-teastore:/app -w /app --network host locustio/locust:latest -f locustfile.py --host http://localhost:8080 --users 5 --spawn-rate 5 --headless --run-time 30s

      - name: Teste de Carga Complexo (Locust via Docker)
        run: |
          docker run --rm -v ${{ github.workspace }}/locust-teastore:/app -w /app --network host locustio/locust:latest -f cenarios-complexos-locust.py --host http://localhost:8080 --users 10 --spawn-rate 5 --headless --run-time 1m
