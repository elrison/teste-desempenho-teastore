name: Executar Testes de Desempenho (Simples e Complexos)

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  run-performance-tests:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout do código, incluindo submódulos
      - name: 1. Baixar o código do repositório
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      # 2. Subir aplicação TeaStore com Docker Compose
      - name: 2. Subir a aplicação TeaStore com Docker Compose
        run: docker-compose -f examples/docker/docker-compose_default.yaml up -d
        working-directory: ./TeaStore

      # 3. Aguarda a aplicação iniciar
      - name: 3. Aguardar inicialização da aplicação
        run: |
          echo "Aguardando 45 segundos para os serviços do TeaStore iniciarem..."
          sleep 45
          echo "Verificando se o serviço web está no ar..."
          timeout 60s bash -c 'until curl --fail http://localhost:8080/tools.descartes.teastore.webui/; do sleep 5; done'
          echo "Aplicação TeaStore está pronta."

      # ======================================================
      # === TESTES SIMPLES ===
      # ======================================================

      - name: 4.1. Executar Teste de Carga Simples com k6
        uses: grafana/k6-action@v0.2.0
        with:
          filename: k6-teastore/teste-carga-simples.js

      - name: 4.2. Executar Teste de Carga Simples com Locust
        run: |
          docker run --network=host --rm -v ${{ github.workspace }}/locust-teastore:/app \
            locustio/locust -f /app/locustfile.py \
            --host http://localhost:8080 --users 10 --spawn-rate 10 --headless --run-time 30s

      - name: 4.3. Executar Teste de Carga Simples com JMeter
        run: |
          docker run --network=host --rm -v ${{ github.workspace }}/jmeter-teastore:/app -w /app \
            justb4/jmeter -n -t teste-carga-simples.jmx -l resultados_simples.jtl -e -o relatorio-simples

      # ======================================================
      # === TESTES COMPLEXOS ===
      # ======================================================

      - name: 5.1. Executar Teste de Carga Complexo com k6
        uses: grafana/k6-action@v0.2.0
        with:
          filename: k6-teastore/cenarios-complexos.js

      - name: 5.2. Executar Teste de Carga Complexo com Locust
        run: |
          docker build -t locust-teastore-custom locust-teastore
          docker run --network=host --rm locust-teastore-custom \
            -f cenarios-complexos-locust.py \
            --host http://localhost:8080 --users 5 --spawn-rate 5 --headless --run-time 30s \
            --html relatorio_locust.html --csv resultados_locust

      - name: 5.3. Executar Teste de Carga Complexo com JMeter
        run: |
          docker build -t jmeter-teastore-custom jmeter-teastore
          docker run --network=host --rm -v ${{ github.workspace }}/jmeter-teastore:/jmeter -w /jmeter jmeter-teastore-custom \
            -n -t cenarios-complexos.jmx -l resultados_complexo.jtl -e -o relatorio-complexo \
            -Jhostname=localhost -Jport=8080

      # ======================================================
      # === SALVAR ARTEFATOS ===
      # ======================================================

      - name: 6. Salvar Relatórios como Artefatos
        uses: actions/upload-artifact@v4
        with:
          name: relatorios-de-desempenho
          path: |
            k6-teastore/summary.json
            locust-teastore/relatorio_locust.html
            locust-teastore/resultados_locust_stats.csv
            jmeter-teastore/relatorio-simples/
            jmeter-teastore/relatorio-complexo/
